#version 400 core

in vec4 clipSpace;

out vec4 out_Color;

uniform sampler2D reflectionTexture;
uniform sampler2D refractionTexture;

void main(void) {

    /* Realiza la division de perspectiva para normalizar el espacio del dispositivo. Para muestrear una textura tenemos
     * que dar las coordenadas del espacio de pantalla de cualquier punto dado del cuadrilatero de agua en este sistema
     * de coordenadas para poder usar esas mismas coordenadas para muestrear las texturas. Esto se hace dividiendo por
     * 2 y sumando 0.5, esto nos dara las coordenadas del espacio de la pantalla. */
    vec2 ndc = (clipSpace.xy / clipSpace.w) / 2.0 + 0.5;
    // Invierte la coordenada [y] debido a que es una reflexion
    vec2 reflectTexCoords = vec2(ndc.x, -ndc.y);
    // Las coordenadas de la texturan de refraccion son iguales a las coordenadas normalizadas del dispositivo (ndc)
    vec2 refractTexCoords = vec2(ndc.x, ndc.y);
    vec4 reflectColour = texture(reflectionTexture, reflectTexCoords);
    vec4 refractColour = texture(refractionTexture, refractTexCoords);

	out_Color = mix(reflectColour, refractColour, 0.5);

}